name: Build and publish
on: [push, pull_request]

jobs:
  build-linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libphysfs-dev libsdl2-dev libzip-dev ninja-build

          cd $GITHUB_WORKSPACE
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/corrade.git
          cd corrade && mkdir build && cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_STATIC=ON \
            -DWITH_INTERCONNECT=OFF \
            -DWITH_TESTSUITE=OFF \
            -G Ninja
          cmake --build . --target install

          cd $GITHUB_WORKSPACE
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/magnum.git
          cd magnum && mkdir build && cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_STATIC=ON \
            -DWITH_DEBUGTOOLS=OFF \
            -DWITH_TEXT=OFF \
            -DWITH_TEXTURETOOLS=OFF \
            -DWITH_SDL2APPLICATION=ON \
            -G Ninja
          cmake --build . --target install

          cd $GITHUB_WORKSPACE
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/magnum-plugins.git
          cd magnum-plugins && mkdir build && cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DCMAKE_BUILD_TYPE=Release \
            -DWITH_STBIMAGEIMPORTER=ON \
            -G Ninja
          cmake --build . --target install

          cd $GITHUB_WORKSPACE
          git clone --branch docking --depth 1 https://github.com/ocornut/imgui.git
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/magnum-integration.git
          cd magnum-integration && mkdir build && cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_STATIC=ON \
            -DWITH_IMGUI=ON \
            -DIMGUI_DIR=$GITHUB_WORKSPACE/imgui \
            -G Ninja
          cmake --build . --target install

      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. \
            -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/deps \
            -DCMAKE_BUILD_TYPE=Release \
            -DIMGUI_DIR=$GITHUB_WORKSPACE/imgui \
            -G Ninja

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Oberon-Linux
          path: build/Release/bin

  build-macos:
    name: macOS
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install dependencies
        run: |
          brew install physfs sdl2 libzip ninja

          cd $GITHUB_WORKSPACE
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/corrade.git
          cd corrade && mkdir build && cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_STATIC=ON \
            -DWITH_INTERCONNECT=OFF \
            -DWITH_TESTSUITE=OFF \
            -G Ninja
          cmake --build . --target install

          cd $GITHUB_WORKSPACE
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/magnum.git
          cd magnum && mkdir build && cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_STATIC=ON \
            -DWITH_DEBUGTOOLS=OFF \
            -DWITH_TEXT=OFF \
            -DWITH_TEXTURETOOLS=OFF \
            -DWITH_SDL2APPLICATION=ON \
            -G Ninja
          cmake --build . --target install

          cd $GITHUB_WORKSPACE
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/magnum-plugins.git
          cd magnum-plugins && mkdir build && cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DCMAKE_BUILD_TYPE=Release \
            -DWITH_STBIMAGEIMPORTER=ON \
            -G Ninja
          cmake --build . --target install

          cd $GITHUB_WORKSPACE
          git clone --branch docking --depth 1 https://github.com/ocornut/imgui.git
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/magnum-integration.git
          cd magnum-integration && mkdir build && cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_STATIC=ON \
            -DWITH_IMGUI=ON \
            -DIMGUI_DIR=$GITHUB_WORKSPACE/imgui \
            -G Ninja
          cmake --build . --target install

      - name: Configure
        run: |
          mkdir build && cd build
          cmake .. \
            -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/deps \
            -DCMAKE_BUILD_TYPE=Release \
            -DIMGUI_DIR=$GITHUB_WORKSPACE/imgui \
            -G Ninja

      - name: Build
        run: |
          cd build
          cmake --build .

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Oberon-macOS
          path: build/Release/bin

  build-windows:
    name: Windows
    runs-on: windows-latest
    env:
      VCPKG_DEFAULT_TRIPLET: x64-windows
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Install dependencies
        shell: bash
        run: |
          vcpkg install physfs sdl2 libzip

          cd $GITHUB_WORKSPACE
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/corrade.git
          cd corrade && mkdir build && cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DBUILD_STATIC=ON \
            -DWITH_INTERCONNECT=OFF \
            -DWITH_TESTSUITE=OFF
          cmake --build . --config Release --target install

          cd $GITHUB_WORKSPACE
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/magnum.git
          cd magnum && mkdir build && cd build
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DBUILD_STATIC=ON \
            -DWITH_DEBUGTOOLS=OFF \
            -DWITH_TEXT=OFF \
            -DWITH_TEXTURETOOLS=OFF \
            -DWITH_SDL2APPLICATION=ON
          cmake --build . --config Release --target install

          cd $GITHUB_WORKSPACE
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/magnum-plugins.git
          cd magnum-plugins && mkdir build && cd build
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DWITH_STBIMAGEIMPORTER=ON
          cmake --build . --config Release --target install

          cd $GITHUB_WORKSPACE
          git clone --branch docking --depth 1 https://github.com/ocornut/imgui.git
          git clone --branch v2020.06 --depth 1 https://github.com/mosra/magnum-integration.git
          cd magnum-integration && mkdir build && cd build
          cmake .. \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/deps \
            -DBUILD_STATIC=ON \
            -DWITH_IMGUI=ON \
            -DIMGUI_DIR=$GITHUB_WORKSPACE/imgui
          cmake --build . --config Release --target install

      - name: Configure
        shell: bash
        run: |
          mkdir build && cd build
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_INSTALLATION_ROOT/scripts/buildsystems/vcpkg.cmake \
            -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/deps \
            -DIMGUI_DIR=$GITHUB_WORKSPACE/imgui

      - name: Build
        shell: bash
        run: |
          cd build
          cmake --build . --config Release
          cp -r $GITHUB_WORKSPACE/deps/bin/magnum $GITHUB_WORKSPACE/build/Release/bin

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: Oberon-Windows
          path: build/Release/bin
