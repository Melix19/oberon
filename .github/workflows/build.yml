name: build

on: [push, pull_request]

jobs:
  Linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Install dependencies
      run: |
        sudo apt-get install -y libglfw3-dev python3-dev

        cd ..
        curl -L https://github.com/pybind/pybind11/archive/v2.4.3.tar.gz --output pybind11.tar.gz && tar -xzf pybind11.tar.gz
        cd pybind11-2.4.3 && mkdir build && cd build
        cmake .. \
          -DCMAKE_INSTALL_PREFIX=$HOME/deps \
          -DPYBIND11_TEST=OFF
        cmake --build .
        cmake --build . --target install

        cd ../..
        git clone --depth 1 https://github.com/mosra/corrade.git
        cd corrade && mkdir build && cd build
        cmake .. \
          -DCMAKE_INSTALL_PREFIX=$HOME/deps \
          -DCMAKE_INSTALL_RPATH=$HOME/deps/lib \
          -DCMAKE_BUILD_TYPE=Release \
          -DWITH_TESTSUITE=OFF
        cmake --build .
        cmake --build . --target install

        cd ../..
        git clone --depth 1 https://github.com/mosra/magnum.git
        cd magnum && mkdir build && cd build
        cmake .. \
          -DCMAKE_INSTALL_PREFIX=$HOME/deps \
          -DCMAKE_BUILD_TYPE=Release \
          -DWITH_GLFWAPPLICATION=ON
        cmake --build .
        cmake --build . --target install

    - name: Configure
      run: |
        mkdir build && cd build
        cmake .. \
          -DCMAKE_PREFIX_PATH=$HOME/deps \
          -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        cd build
        cmake --build .

  macOS:
    runs-on: macOS-latest

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Install dependencies
      run: |
        brew install glfw3 pybind11

        cd ../..
        git clone --depth 1 https://github.com/mosra/corrade.git
        cd corrade && mkdir build && cd build
        cmake .. \
          -DCMAKE_INSTALL_PREFIX=$HOME/deps \
          -DCMAKE_INSTALL_RPATH=$HOME/deps/lib \
          -DCMAKE_BUILD_TYPE=Release \
          -DWITH_TESTSUITE=OFF
        cmake --build .
        cmake --build . --target install

        cd ../..
        git clone --depth 1 https://github.com/mosra/magnum.git
        cd magnum && mkdir build && cd build
        cmake .. \
          -DCMAKE_INSTALL_PREFIX=$HOME/deps \
          -DCMAKE_BUILD_TYPE=Release \
          -DWITH_GLFWAPPLICATION=ON
        cmake --build .
        cmake --build . --target install

    - name: Configure
      run: |
        mkdir build && cd build
        cmake .. \
          -DCMAKE_PREFIX_PATH=$HOME/deps \
          -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        cd build
        cmake --build .

  Windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Install dependencies
      shell: bash
      run: |
        cd $HOME
        curl -L https://github.com/glfw/glfw/releases/download/3.3.1/glfw-3.3.1.bin.WIN64.zip --output glfw.zip
        7z x glfw.zip && mv glfw-3.3.1.bin.WIN64 glfw
        mkdir deps && mkdir deps/lib && mkdir deps/bin && mkdir deps/include
        cp -a glfw/include/. deps/include/ && cp -a glfw/lib-vc2019/. deps/lib/

        cd $GITHUB_WORKSPACE
        curl -L https://github.com/pybind/pybind11/archive/v2.4.3.tar.gz --output pybind11.tar.gz && tar -xzf pybind11.tar.gz
        cd pybind11-2.4.3 && mkdir build && cd build
        cmake .. \
          -DCMAKE_INSTALL_PREFIX=$HOME/deps \
          -DPYBIND11_TEST=OFF
        cmake --build .
        cmake --build . --target install

        cd ../..
        git clone --depth 1 https://github.com/mosra/corrade.git
        cd corrade && mkdir build && cd build
        cmake .. \
          -DCMAKE_INSTALL_PREFIX=$HOME/deps \
          -DCMAKE_INSTALL_RPATH=$HOME/deps/lib \
          -DCMAKE_BUILD_TYPE=Release \
          -DWITH_TESTSUITE=OFF
        cmake --build .
        cmake --build . --target install

        cd ../..
        git clone --depth 1 https://github.com/mosra/magnum.git
        cd magnum && mkdir build && cd build
        cmake .. \
          -DCMAKE_INSTALL_PREFIX=$HOME/deps \
          -DCMAKE_BUILD_TYPE=Release \
          -DWITH_GLFWAPPLICATION=ON
        cmake --build .
        cmake --build . --target install

    - name: Configure
      shell: bash
      run: |
        mkdir build && cd build
        cmake .. \
          -DCMAKE_PREFIX_PATH=$HOME/deps \
          -DCMAKE_BUILD_TYPE=Release

    - name: Build
      shell: bash
      run: |
        cd build
        cmake --build .
